---
import { getCollection, render } from 'astro:content'
import Layout from '@/layouts/Layout.astro'
import type { Experience, Project } from '@/shared/types/Experience'
import Header from '@/components/experience/Header.astro'
import Footer from '@/components/Footer.astro'
import CalendarIcon from '@/icons/CalendarIcon.astro'
import { CardProject } from '@/shared/components/Cards/Cards'
import ArrowCard from '@/components/shared/ArrowCard.astro'
import NavBar from '@/components/NavBar.astro'
import Media from '@/components/Media.astro'
import normalizeTech from '@/shared/utils/utils'

export async function getStaticPaths() {
  const experiences: Experience[] = await getCollection('experience')

  return experiences.map((experience) => ({
    params: { id: experience.data.id },
    props: { data: experience.data },
  }))
}

const { data } = Astro.props

const { position, company, start_date, end_date, location, projects } = data

let finishDate = 'now'

if (end_date != null) {
  finishDate = end_date
}
---

<Layout>
  <NavBar returnHome="true" />
  <main
    class="[background:radial-gradient(100%_20%_at_0%_1%,#F472B6_22%,#F5F3F0_100%)] dark:[background:radial-gradient(100%_20%_at_20%_1%,#F472B6_1%,#0D0D0D_100%)]"
    role="main"
    aria-label="Detalle de experiencia laboral"
  >
    <Header title={position} company={company} />
    <section class="flex flex-col items-center justify-center">
      <article class="dark:text-rice flex items-center justify-center gap-4 p-3.5">
        <CalendarIcon class="h-6 w-6" />
        <div>
          <span>{location}</span>
          <span>{start_date.concat(',', finishDate)}</span>
        </div>
      </article>
      <div class="mt-10 grid w-5/6 grid-cols-1 gap-10">
        {
          Array.isArray(projects) && projects.length > 0 ? (
            projects.map((project: Project, i: number) => (
              <>
                <CardProject
                  title={project.title}
                  skills={normalizeTech(project.tech)}
                  link={project.link}
                  client:load
                >
                  <p>{project.description}</p>
                </CardProject>
                {i !== projects.length - 1 && <ArrowCard class="w-15 h-15 mb-8 mt-8" />}
              </>
            ))
          ) : (
            <p>No hay proyectos disponibles.</p>
          )
        }
      </div>
      <Media />
      <section class="mt-10 w-5/6"></section>
    </section>
    <Footer />
  </main>
</Layout>
