---
import { getCollection, render } from "astro:content";
import Layout from "../../../layouts/Layout.astro";
import type { Experience, Project } from "../../../shared/types/Experience";
import Header from "../../../components/experience/Header.astro";
import Footer from "../../../components/Footer.astro";
import Projects from "../../../components/experience/Projects.astro";
import CalendarIcon from "../../../icons/CalendarIcon.astro";

export async function getStaticPaths() {
	const experiences: Experience[] = await getCollection("experience");

	return experiences.map((experience) => ({
		params: { id: experience.data.id },
		props: { data: experience.data },
	}));
}

const { data } = Astro.props;

const {
	position,
	company,
	employment_type,
	start_date,
	end_date,
	duration,
	location,
	website,
	skills,
	id,
	projects,
} = data;

let finishDate = "now";

if (end_date != null) {
	finishDate = end_date;
}
---

<Layout>
	<main
		class="[background:radial-gradient(100%_20%_at_20%_1%,#F472B6_20%,#0D0D0D_100%)]"
		role="main"
		aria-label="Detalle de experiencia laboral"
	>
		<Header title={position} company={company} />
		<section class="flex justify-center flex-col items-center">
			<article class="text-wasabi p-3.5 flex gap-4 items-center justify-center">
				<CalendarIcon class="w-6 h-6" />
				<div>
					<span>{location}</span>
					<span>{start_date.concat(",", finishDate)}</span>
				</div>
			</article>
			<div class="w-5/6 mt-10 grid grid-cols-1 gap-10">
				{
					Array.isArray(projects) && projects.length > 0 ? (
						projects.map((project: Project, index: number) => (
							<Projects
								key={index}
								title={project.title}
								link={project.link}
								skills={project.tech}
								description={project.description}
							/>
						))
					) : (
						<p>No hay proyectos disponibles.</p>
					)
				}
			</div>
			<section class="w-5/6 mt-10"></section>
			<Footer />
		</section>
	</main>
</Layout>
